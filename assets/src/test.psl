// Import data entities from external JSON format files
use vertices from<json> "./test data/example2.1/vertex_data.json" as list[Vertex]
use edges from<json> "./test data/example2.1/edge_data.json" as list[Edge]

// Import commonly used type definitions from the PSL standard library
use { GraphEntity, Task } from "lib.psl"

// Create an entity that inherits default values from GraphEntity and modify the scrutiny property
let ge: GraphEntity = {
scrutiny = true
}

// Use the for_each method on the imported list type data to perform a specified operation on each element
// In this example, execute add_vertex or add_edge operation on each element and add them to the ge entity
vertices.for_each<add_vertex<ge>>
edges.for_each<add_edge<ge>>

// Convert the ge entity to an entity of type Task and set the id and priority properties
let task: Task = ge.to_task<id="test_project", priority="LOW">

// Print information of the task entity, can also be written as print<Task>(task) or task.print<Task>
print<Task> task

// Execute the task entity and save the execution result to the result entity
let result = task.execute

print result

// Analyze the result entity using eye diagrams
result.analyze<eye>